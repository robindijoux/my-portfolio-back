meta {
  name: 2. Create Professional Achievement
  type: http
  seq: 2
}

post {
  url: {{base_url}}/timelineEvent
  body: json
  auth: bearer
}

auth:bearer {
  token: {{jwt_token}}
}

body:json {
  {
    "timestamp": 1718449800000,
    "title": "Senior Full-Stack Developer Promotion",
    "description": "Promoted to Senior Full-Stack Developer role after successfully leading the migration of legacy systems to modern microservices architecture. Achieved 40% performance improvement and 60% reduction in deployment time.",
    "type": "achievement",
    "location": "TechCorp Solutions",
    "image": "https://example.com/promotion-announcement.jpg"
  }
}

script:post-response {
  if (res.body && res.body.id) {
    bru.setEnvVar('timeline_event_id', res.body.id);
    console.log(`üéâ Created timeline event with ID: ${res.body.id}`);
  }
}

tests {
  test("should create achievement successfully with auth", function() {
    expect(res.getStatus()).to.be.oneOf([201, 401]);
    
    if (res.getStatus() === 201) {
      expect(res.getBody()).to.have.property('id');
      expect(res.getBody().title).to.equal("Senior Full-Stack Developer Promotion");
      expect(res.getBody().type).to.equal('achievement');
      expect(res.getBody().timestamp).to.be.a('number');
      console.log(`‚úÖ Achievement created: ${res.getBody().title}`);
    } else {
      console.log("‚ö†Ô∏è Authentication failed - Check jwt_token in environment");
    }
  });
  
  test("should auto-generate ID and timestamp", function() {
    if (res.getStatus() === 201) {
      expect(res.getBody().id).to.be.a('string');
      expect(res.getBody().createdAt).to.be.a('string');
      expect(new Date(res.getBody().createdAt)).to.be.a('date');
    }
  });
}

docs {
  # Step 2: Create Professional Achievement
  
  üîê **AUTHENTICATION REQUIRED**: JWT token needed
  
  Creates a new timeline event representing a professional achievement.
  
  ## Achievement Type:
  This example creates an "achievement" type event, which represents:
  - Career milestones and promotions
  - Professional recognitions and awards  
  - Significant project completions
  - Skills certifications and accomplishments
  
  ## Auto-Generated Fields:
  - `id`: UUID generated by the system
  - `createdAt`: Current timestamp
  
  **Next Step**: Retrieve Timeline Event (Step 3)
}